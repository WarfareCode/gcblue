#new home for the weaponry lists, they shouldn't be in the core file
#hopefully in 1.4 the entire purpose of this file dissolves and these lists go away.

def isBomber(UI, aircraft):
    #these aircraft only level bomb, no lofting, no diving.
    bombers = {
            'B-1B',
            'FB-111A',
            'Tu-160',
            'Tu-22ME',
            'Tu-95RT',
            'Tu-16',
            'Tu-16KS',
            'Tu-16KSR-2',
            'Tu-16K-10-26',
            'Tu-22K',
            'H-6K',
            'A-29B',
            'B-2A',
            'B-52H',
            'F-117',
            'H-6D',
            'P-3A Orion',
            'P-3B Orion',
            'P-3C Orion',
            'P-3C II Orion',
            'P-3C III Orion',
            'P-3C AIP Orion',
            'P-3C UIP Orion',
            'P-3F Orion',
            'P-3K Orion',
            'P-3M Orion',
            'P-3P Orion',
            'P-3T Orion',
            'AP-3C Orion',
            'CP-140 Aurora',
            'P-8 MPA',
            'Tu-142M',
            'Tu-95G',
            'Il-38',
            'Tu-16P Buket',
            'A3D-1',
            'A3D-1Q',
            'A3D-2',
            'A3D-2Q',
            'AJ-1',
            'AJ-2',
            'B-66B',
            }
    if aircraft in bombers:
        return 1
    else:
        return 0
        
def Aircraft_Speed(UI, aircraft):
    planes = {
            'A-10A':450,
            'A-10A(78)':450,
            'A-10C':450,
            'A-29B':304,
            'A-1D':350,
            'A-1E':350,
            'A-1G':350,
            'A-1H':350,
            'A-1J':350,
            'A-20A':300,
            'A-3A':546,
            'A-3B':534,
            'A-4A':575,
            'A-4AR':610,
            'A-4B':575,
            'A-4C':575,
            'A-4E':587,
            'A-4E(Indonesia)':587,
            'A-4F':595,
            'A-4G(AU)':595,
            'A-4G(NZ)':595,
            'A-4H':595,
            'A-4K':595,
            'A-4Ku':610,
            'A-4M':610,
            'A-4N':610,
            'A-4P':575,
            'A-4PTM':575,
            'A-4S':585,
            'A-4Su':610,
            'A-50':560,
            'A-6A':556,
            'A-6B':556,
            'A-6C':567,
            'A-6E':567,
            'A-6E(78)':567,
            'A-7A':593,
            'A-7B':605,
            'A-7C':605,
            'A-7D':629,
            'A-7E':629,
            'A-7E(79)':629,
            'A-7E(Thailand)':629,
            'A-7H':629,
            'A-7K':632,
            'A-7P':605,
            'A3D-1':546,
            'A3D-1Q':546,
            'A3D-2':533,
            'A3D-2P':533,
            'A3D-2Q':533,
            'A4D-1':575,
            'A4D-2':575,
            'A4D-2N':575,
            'AD-1':317,
            'AD-1Q':317,
            'AD-2':325,
            'AD-2Q':325,
            'AD-3':325,
            'AD-3Q':325,
            'AD-3W':325,
            'AD-4':342,
            'AD-4B':342,
            'AD-4L':342,
            'AD-4N':342,
            'AD-4NA':342,
            'AD-4NA(France)':342,
            'AD-4Q':342,
            'AD-4W':342,
            'AD-5':342,
            'AD-5N':342,
            'AD-5Q':342,
            'AD-5W':342,
            'AD-6':342,
            'AD-7':342,
            'AF-1':610,
            'AF-1E Fury':635,
            'AJ-1':389,
            'AJ-2':389,
            'AJ-2P':389,
            'AEW aircraft':300,
            'AP-3C Orion':410,
            'AV-8A Harrier':575,
            'AV-8B Harrier II NA':575,
            'AV-8B Harrier II':575,
            'AV-8B Harrier II':575,
            'AV-8B Harrier II+(Italy)':575,
            'AV-8C Harrier':575,
            'Airbus A330':580,
            'Alpha Jet':800,
            'B-1B':750,
            'B-2A':525,
            'B-52H':565,
            'B-66B':531,
            'Boeing 747':533,
            'Boeing 767':580,
            'Buccaneer S1':600,
            'Buccaneer S2':600,
            'C-130H':318,
            'C-130J':318,
            'C-26B Metro-EW':248,
            'C-2A':343,
            'C-2B':355,
            'CASA C-212-400':200,
            'CASA C-212-S43':200,
            'CASA CN-235MP-200 ELINT':245,
            'CASA CN-235MP-200':245,
            'CF-18 p.I':1050,
            'CF-18':1050,
            'CP-140 Aurora':410,
            'Dehaviland Canada DHC-8-102':269.38,
            'E-1B':324,
            'E-2A':324,
            'E-2B':324,
            'E-2C 1993 NP':340,
            'E-2C Group 0':324,
            'E-2C Group 1':324,
            'E-2C Group 2':324,
            'E-2C grp0':338,
            'E-2C':324,
            'E-2T':330,
            'E-3C':461,
            'E-3D/F':515,
            'E-3G':461,
            'E-737 AEW&C':475,
            'EA-1E':342,
            'EA-1F':342,
            'EA-3A':546,
            'EA-3B':533,
            'EA-6A':556,
            'EA-6B':568,
            'EAV-8A Matador':575,
            'EAV-8A Matador(Thailand)':575,
            'EAV-8B Matador':575,
            'EF-111A':1227,
            'EKA-3B':533,
            'ES-3A':429,
            'ESM Test Aircraft':300,
            'F-111A':1227,
            'F-111C':1227,
            'F-111D':1227,
            'F-111E':1227,
            'F-111F':1227,
            'F-111G':1227,
            'F-117':580,
            'F-14A':1340,
            'F-14B':1340,
            'F-14D':1340,
            'F-15A':1434,
            'F-15C':1434,
            'F-15E':1434,
            'F-15J':1434,
            'F-16A/B Blk 15 ADF':1300,
            'F-16A/B Blk 15 OCU':1300,
            'F-16A/B Blk 15':1300,
            'F-16A/B Blk 20':1300,
            'F-16A/B':1300,
            'F-16AM/BM Blk 15 MLU':1300,
            'F-16C/D Blk 25':1300,
            'F-16C/D Blk 30':1300,
            'F-16C/D Blk 30b':1300,
            'F-16C/D Blk 32':1300,
            'F-16C/D Blk 32b':1300,
            'F-16C/D Blk 40':1300,
            'F-16C/D Blk 42':1300,
            'F-16C/D Blk 50':1300,
            'F-16C/D Blk 50+':1300,
            'F-16C/D Blk 52':1300,
            'F-16C/D Blk 52+':1300,
            'F-1E Fury':616,
            'F-3B':622,
            'F-3B':622,
            'F-22':1430,
            'F-35A':1060,
            'F-4B':1370,
            'F-4C':1370,
            'F-4D':1370,
            'F-4E':1370,
            'F-4F':1370,
            'F-4G':1370,
            'F-4J':1370,
            'F-5E':930,
            'F-6A':641,
            'F-86A':579,
            'F-86E':587,
            'F-86F':602,
            'F-86H':622,
            'F-8A':879,
            'F-8B':879,
            'F-8C':908,
            'F-8D':964,
            'F-8E':964,
            'F-8E(FN)':964,
            'F-8H':991,
            'F-8J':991,
            'F-8K':908,
            'F-8L':878,
            'F-8P':991,
            'F/A-18A':1050,
            'F/A-18A+':1050,
            'F/A-18C':1050,
            'F/A-18D':1050,
            'F/A-18E':1050,
            'F/A-18F':1050,
            'F/A-18F(Australia)':1050,
            'F2H-1':494,
            'F2H-2':505,
            'F2H-2B':505,
            'F2H-2N':505,
            'F2H-2P':505,
            'F2H-3':513,
            'F2H-3(Canada)':513,
            'F2H-4':523,
            'F3H-2':622,
            'F4D-1':649,
            'F4H-1':1370,
            'F8U-1':879,
            'F8U-1P':879,
            'F8U-1E':879,
            'F8U-2':908,
            'F8U-2N':964,
            'F8U-2NE':964,
            'F9F-2':439,
            'F9F-2(Arg)':439,
            'F9F-2P':439,
            'F9F-4':500,
            'F9F-5':503,
            'F9F-5P':503,
            'F9F-6':558,
            'F9F-6P':558,
            'F9F-7':558,
            'F9F-8':558,
            'F9F-8B':558,
            'F9F-8P':558,
            'FB-111A':1227,
            'FGR.Mk.2':1090,
            'FJ-2 Fury':603,
            'FJ-3 Fury':617,
            'FJ-3M Fury':617,
            'FJ-4 Fury':617,
            'FJ-4B Fury':617,
            'Falcon-20DC Prometeo':465,
            'Gannet AEW.3':217,
            'Generic aircraft':500,
            'H-6D':500,
            'H-6K':700,
            'Harrier GR.Mk.1':575,
            'Harrier GR.Mk.1A':575,
            'Harrier GR.Mk.3 (82)':575,
            'Harrier GR.Mk.3':575,
            'Harrier GR.Mk.3A':575,
            'Harrier GR.Mk.5':575,
            'Harrier GR.Mk.5A':575,
            'Harrier GR.Mk.7 (01)':575,
            'Harrier GR.Mk.7':575,
            'Harrier GR.Mk.7A':575,
            'Harrier GR.Mk.9':575,
            'Harrier GR.Mk.9A':575,
            'IL-78M':460,
            'Il-38':390,
            'J-10':1300,
            'J-11':1350,
            'J-7':1160,
            'KA-3B':533,
            'KA-6D':556,
            'KC-130F':315,
            'KC-30A':580,
            'KC-767A':495,
            'KS-3B':429,
            'Kfir C.10':1317,
            'Kfir C.12':1317,
            'Lightning F.Mk.1':975,
            'Lightning F.Mk.1A':975,
            'Lightning F.Mk.2':975,
            'Lightning F.Mk.2A':1200,
            'Lightning F.Mk.3':1200,
            'Lightning F.Mk.3A':1200,
            'Lightning F.Mk.6':1200,
            'MiG-21 Bison':1350,
            'MiG-21 LanceR':1350,
            'MiG-21 PFM':1230,
            'MiG-21-93':1350,
            'MiG-21F':1160,
            'MiG-21F-13':1160,
            'MiG-21FL':1230,
            'MiG-21FR':1160,
            'MiG-21M':1230,
            'MiG-21MF':1270,
            'MiG-21PF':1230,
            'MiG-21PF-76A':1230,
            'MiG-21PFL':1230,
            'MiG-21PFM':1230,
            'MiG-21PFMA':1230,
            'MiG-21PFMM':1230,
            'MiG-21S':1230,
            'MiG-21SM':1270,
            'MiG-21SN':1270,
            'MiG-21bis':1350,
            'MiG-21bis(India)':1350,
            'MiG-23':1350,
            'MiG-25':1835,
            'MiG-27':1018,
            'MiG-29':1320,
            'MiG-29AS':1320,
            'MiG-29B':1320,
            'MiG-29G':1320,
            'MiG-29GT':1320,
            'MiG-29K':1320,
            'MiG-29M':1320,
            'MiG-29ME':1320,
            'MiG-29OVT':1320,
            'MiG-29S':1320,
            'MiG-29SD':1320,
            'MiG-29SE':1320,
            'MiG-29SM':1320,
            'MiG-29SMT':1320,
            'MiG-29TVK':1320,
            'MiG-29UB':1320,
            'MiG-29UBS':1320,
            'MiG-31':1620,
            'Mirage-1993':1270,
            'Mirage-F1':1370,
            'Mirage-IIIE':1268,
            'Mitsubishi F-2':1149,
            'P-3A Orion':390,
            'P-3B Orion':410,
            'P-3C AIP Orion':410,
            'P-3C II Orion':410,
            'P-3C III Orion':410,
            'P-3C Orion':410,
            'P-3C UIP Orion':410,
            'P-3F Orion':410,
            'P-3K Orion':410,
            'P-3M Orion':410,
            'P-3P Orion':410,
            'P-3T Orion':410,
            'P-51D':470,
            'P-8 MPA':490,
            'RA-3B':533,
            'RA-5C':1147,
            'RF-4B':1370,
            'RF-4C':1370,
            'RF-8A':879,
            'RF-8G':991,
            'RQ-2':110,
            'Rafale M':1168,
            'S-2G':265,
            'S-2T Taiwan':265,
            'S-3A':429,
            'S-3B':429,
            'SR-71':2100,
            'Scimitar F.1':650,
            'Sea Harrier FA.Mk.2':575,
            'Sea Harrier FRS.Mk.1 (83)':575,
            'Sea Harrier FRS.Mk.1 (85)':575,
            'Sea Harrier FRS.Mk.1':575,
            'Sea Harrier FRS.Mk.51':575,
            'Sea Venom FAW.20':530,
            'Sea Venom FAW.21':545,
            'Sea Venom FAW.22':560,
            'Sea Vixen FAW.1':800,
            'Sea Vixen FAW.2':800,
            'SkyRaider AEW.1':342,
            'Su-17':1400,
            'Su-17M':1400,
            'Su-17M2':1400,
            'Su-17M3':1400,
            'Su-17M4':1400,
            'Su-20':1400,
            'Su-22':1400,
            'Su-22M':1400,
            'Su-22M3':1400,
            'Su-22M4':1400,
            'Su-22M5':1400,
            'Su-24M':1300,
            'Su-25':490,
            'Su-27':1350,
            'Su-30MK2':1200,
            'Su-30MKK':1200,
            'Su-30MKK3':1144,
            'Su-33':1250,
            'Su-33BM':1435,
            'Su-35BM':1350,
            'Super Etendard M':1050,
            'Test Aircraft':400,
            'Tornado ADV':1312,
            'Tornado F.Mk.2':1312,
            'Tornado F.Mk.3':1312,
            'Tornado GR.Mk.1':1312,
            'Tornado GR.Mk.1B':1312,
            'Tornado GR.Mk.4':1312,
            'Tornado IDS':1312,
            'Tu-128':1200,
            'Tu-128M':1200,
            'Tu-142M':400,
            'Tu-16':700,
            'Tu-160':1200,
            'Tu-16K-10-26':700,
            'Tu-16KS':700,
            'Tu-16KSR-2':700,
            'Tu-16P Buket':500,
            'Tu-22K':900,
            'Tu-22ME':1200,
            'Tu-95G':400,
            'Tu-95RT':486,
            'Type-77(MiG-21FL)':1230,
            'Type-88(MiG-21MF)':1270,
            'Typhoon':1350,
            'WF-2':324,
            'Y-8EW':350,
            'Yak-38':690,
            'Yak-38M':705,
            'xF-16A':1300,
            'xF-16C':1300,
            'xMiG-21':900,
            'xP-3':410,            }
    kts = planes.get(aircraft)
    return kts

def Torpedo_Lead(UI, torpedo):
    Torpedo = {
                '53-56':41,
                '53-56V':41,
                '53-65':40.5,
                '53-65K':40.5,
                '53-65KE':40.5,
                '53-65M':34,
                '65-76 Kit':37,
                'A-184':28,
                'A-244S':26.95,
                'A-244S Mod1':26.95,
                'AEG-SUT':27.5,
                'APR-2E':34.2,
                'AT-1':26.1,
                'AT-2M':34.5,
                'DM1':24.5,
                'DM2A1':25.3,
                'DM2A3':26.7,
                'DM2A4.1':26.7,
                'DM2A4.2':32.2,
                'DM2A4.3':34.5,
                'DM2A4.4':38.2,
                'F-17':27.1,
                'F-17 Mod1':27.1,
                'F-17 Mod2':29.6,
                'F-17P Mod2':27.1,
                'L5 Mod 4':31.5,
                'L5 Mod4':34.5,
                'Mk VIII Mod4':40.95,
                'Mk-15 Mod0':30.15,
                'Mk-16 Mod6':41.4,
                'mk-24 Tigerfish':27.1,
                'Mk-35':24.3,
                'Mk-37 Mod1':23.4,
                'Mk-37 Mod3':23.4,
                'Mk-44':27,
                'Mk-46 LWT Mod2':29,
                'Mk-46 Mod5':30.68,
                'Mk-48 Mod1/3/4':39.5,
                'Mk-48 Mod5':47.5,
                'Mk-48 Mod6':49.3,
                'Mk-50':40.86,
                'Mk-54':44,
                'MK-T1':46,
                'MK-T1P':46,
                'MU-90':34.5,
                'NT37C':32.4,
                'NT37E':32.4,
                'SAET-40':23,
                'SAET-60M':30.56,
                'SET-65':31.5,
                'SET-65M':30.56,
                'SET-72':22.92,
                'Shkval':180,
                'Spearfish':56,
                'SST-4 Mod.0':26.7,
                'Stingray':34.5,
                'TEST-68':30.56,
                'TEST-71':30.56,
                'TEST-71ME':32,
                'TEST-71MKE':32,
                'type 35':71,
                'Type-431 Torpedo':23.5,
                'Type-612 Torpedo':40.5,
                'Type-613 Torpedo':32.5,
                'Type-617 Torpedo':46,
                'Type-80 Torpedo':28.5,
                'Type-89 Torpedo':43.5,
                'Type-97 LWT':29,
                'UGST':39,
                'UMGT-1M':30.56,
                'USET-80':34.38,
                'VTT-1':22.92,
                'Yu-6':40.5,
                'Yu-7':30.5,
                'L3':22.5,
                'L3 Mod2':25.5,
                'L4':27,
                'Mk-37':23.4,
                'Mk-48 Mod4':41.64,
                'Mk-14 Mod0':41.4,
                'Mk-14 Mod3':41.4,
                'Mk-16 Mod0':41.4,
                'Mk-16 Mod3':41.4,
                'Mk-18':26.1,
                'Mk-28':17.64}
    if torpedo in Torpedo:
        speed_mps = Torpedo.get(torpedo)
        return speed_mps
    else:
        return 0

def AntiShipSubTorpedo(UI, torpedo):
    Torpedo = {
                '53-56',
                '53-56V',
                '53-65',
                '53-65K',
                '53-65KE',
                '53-65M',
                '65-76 Kit',
                'A-184',
                'A-244S',
                'A-244S Mod1',
                'AEG-SUT',
                'APR-2E',
                'AT-1',
                'AT-2M',
                'DM1',
                'DM2A1',
                'DM2A3',
                'DM2A4.1',
                'DM2A4.2',
                'DM2A4.3',
                'DM2A4.4',
                'F-17',
                'F-17 Mod1',
                'F-17 Mod2',
                'F-17P Mod2',
                'L5 Mod 4',
                'L5 Mod4',
                'Mk VIII Mod4',
                'Mk-15 Mod0',
                'Mk-16 Mod6',
                'mk-24 Tigerfish',
                'Mk-35',
                'Mk-37 Mod1',
                'Mk-37 Mod3',
                'Mk-44',
                'Mk-46 LWT Mod2',
                'Mk-46 Mod5',
                'Mk-48 Mod1/3/4',
                'Mk-48 Mod5',
                'Mk-48 Mod6',
                'Mk-50',
                'Mk-54',
                'MK-T1',
                'MK-T1P',
                'MU-90',
                'NT37C',
                'NT37E',
                'SAET-40',
                'SAET-60M',
                'SET-65',
                'SET-65M',
                'SET-72',
                'Shkval',
                'Spearfish',
                'SST-4 Mod.0',
                'Stingray',
                'TEST-68',
                'TEST-71',
                'TEST-71ME',
                'TEST-71MKE',
                'type 35',
                'Type-431 Torpedo',
                'Type-612 Torpedo',
                'Type-613 Torpedo',
                'Type-617 Torpedo',
                'Type-80 Torpedo',
                'Type-89 Torpedo',
                'Type-97 LWT',
                'UGST',
                'UMGT-1M',
                'USET-80',
                'VTT-1',
                'Yu-6',
                'Yu-7',
                'L3',
                'L3 Mod2',
                'L4',
                'Mk-37',
                'Mk-48 Mod4',
                'Mk-14 Mod0',
                'Mk-14 Mod3',
                'Mk-16 Mod0',
                'Mk-16 Mod3',
                'Mk-18',
                'Mk-28'}
    if torpedo in Torpedo:
        return 1
    else:
        return 0
    if torpedo in Torpedo:
        return 1
    else:
        return 0
        
def AntiShipMissile(UI, missile):
    ShM = {
    '3M24E Uran-E',
    '3M45 Granit',
    '3M54 Klub Alfa',
    '3M54 Warhead Section',
    '3M54E Klub Alfa',
    '3M80 Moskit',
    '3M80M Moskit-M',
    '9M113 Konkurs',
    '9M14 Malyutka',
    '9M17MP Skorpion-P',
    'AGM-114 Hellfire',
    'AGM-119A',
    'AGM-119B',
    'AGM-119C',
    'AGM-12A',
    'AGM-12B',
    'AGM-12C',
    'AGM-158A JASSM',
    'AGM-45A',
    'AGM-45B',
    'AGM-62',
    'AGM-62 mk3',
    'AGM-62 mk5',
    'AGM-62 mk21',
    'AGM-62 mk23',
    'AGM-65A',
    'AGM-65B',
    'AGM-65D',
    'AGM-65E',
    'AGM-65F',
    'AGM-65G',
    'AGM-65J',
    'AGM-65K',
    'AGM-69 140kT',
    'AGM-69 15kT',
    'AGM-69 210kT',
    'AGM-69 70kT',
    'AGM-78A',
    'AGM-78B',
    'AGM-78C',
    'AGM-78D',
    'AGM-84A Harpoon',
    'AGM-84C Harpoon',
    'AGM-84D Harpoon',
    'AGM-84E SLAM',
    'AGM-84F Harpoon',
    'AGM-84G Harpoon',
    'AGM-84H SLAM-ER',
    'AGM-88A',
    'AGM-88B',
    'AGM-88C',
    'ALARM',
    'AM-39 Exocet',
    'AS 12',
    'AS-15TT',
    'AS-30',
    'AS-30L',
    'AS.34 Kormoran',
    'AS.34 Kormoran II',
    'ASM-I',
    'BAe Sea Eagle',
    'BGM-109 TASM',
    'BGM-71A TOW',
    'BGM-71E TOW 2',
    'Brimstone',
    'Drone',
    'Gabriel Mk3A/S',
    'Hsiung Feng-II',
    'Kh-15',
    'Kh-15A',
    'Kh-15P',
    'Kh-22',
    'Kh-22M',
    'Kh-22MP',
    'Kh-22N',
    'Kh-23',
    'Kh-25ML',
    'Kh-25MP',
    'Kh-29L',
    'Kh-29T',
    'Kh-31P',
    'Kh-35',
    'Kh-35U',
    'Kh-58',
    'Kh-58U',
    'Kh-59',
    'Kh-59M',
    'Kh-59MK',
    'Kh-66',
    'Marte Mk2/S',
    'MM-38 Exocet',
    'MM-40 B2 Exocet',
    'MM-40 B3 Exocet',
    'MM-40 Exocet',
    'NSM',
    'Otomat Mk-1',
    'Otomat Mk-2',
    'P-120 Malakhit',
    'P-20K',
    'P-500 Bazalt',
    'P-70 Ametist',
    'P-800 Yakhont',
    'Penguin Mk2',
    'RBS-15F',
    'RBS-15F Mk2',
    'RBS-15K',
    'RBS-15K Mk2',
    'RBS-15K Mk3',
    'RBS-15M',
    'RBS-15M Mk2',
    'RBS-15M Mk3',
    'RGM-84A Harpoon',
    'RGM-84C Harpoon',
    'RGM-84D Harpoon',
    'RGM-84F Harpoon',
    'RGM-84G Harpoon',
    'RIM-156',
    'RIM-162A',
    'RIM-162B',
    'RIM-162C',
    'RIM-162D',
    'RIM-174',
    'RIM-174A',
    'RIM-66A',
    'RIM-67A',
    'RPK-3 Metel',
    'RPK-6 Vodopod',
    'RPK-7 Veter',
    'RUM-139 Mod4 ASROC',
    'RUR-5 ASROC',
    'Sea Skua',
    'SM-39 Exocet',
    'SPICE-1000',
    'SSM-I',
    'UGM-109B',
    'UGM-84A Harpoon',
    'UGM-84C Harpoon',
    'UGM-84D Harpoon',
    'X-29TE',
    'X-31A',
    'X-31P',
    'P-15 Termit',
    'P-15U Termit',
    'P-15T Termit',
    'P-15M Termit',
    'P-20 Rubezh',
    'P-20M Rubezh',
    'P-21 Termit',
    'P-21R',
    'P-27',
    'KS-1 Kometa',
    'KSR-2',
    'K-10S',
    'KSR-5',
    'AS.37 Martel',
    'Marte Mk2',
    'Marte',
    'BGM-71A TOW',
    'BGM-71E TOW 2',
    'SY-1',
    'SY-1A',
    'HY-1J',
    'HY-1JA',
    'HY-1A',
    'SY-2',
    'SY-2A',
    'HY-2',
    'HY-2A',
    'HY-2AII',
    'HY-2B',
    'HY-2BII',
    'HY-4',
    'TL-6',
    'TL-10',
    'JJ-6',
    'JJ-10',
    'FL-8',
    'FL-9',
    'FL-10',
    'Noor',
    'FL-2',
    'YJ-12',
    'YJ-1',
    'C-101',
    'C-201',
    'C-201W',
    'C-401',
    'YJ-6',
    'C-601',
    'YJ-63',
    'C-603',
    'YJ-61',
    'C-611',
    'YJ-62',
    'YJ-62K',
    'C-602',
    'C-602K',
    'YJ-7',
    'C-701',
    'C-703',
    'C-704',
    'C-705',
    'YJ-82',
    'C-802',
    'YJ-82A',
    'C-802A',
    'YJ-82K',
    'C-802K',
    'YJ-83',
    'C-803',
    'YJ-83K',
    'C-803K',
    'RUR-5 Mod4 ASROC',
    'SSM-1B'}
    if missile in ShM:
        return 1
    else:
        return 0

def AntiLandMissile(UI, missile):
    GrM = {
    '9M113 Konkurs',
    '9M14 Malyutka',
    '9M17MP Skorpion-P',
    'AGM-114 Hellfire',
    'AGM-119A',
    'AGM-119B',
    'AGM-119C',
    'AGM-12A',
    'AGM-12B',
    'AGM-12C',
    'AGM-45A',
    'AGM-45B',
    'AGM-62',
    'AGM-62 mk3',
    'AGM-62 mk5',
    'AGM-62 mk21',
    'AGM-62 mk23',
    'AGM-65A',
    'AGM-65B',
    'AGM-65D',
    'AGM-65E',
    'AGM-65F',
    'AGM-65G',
    'AGM-65J',
    'AGM-65K',
    'AGM-69 140kT',
    'AGM-69 15kT',
    'AGM-69 210kT',
    'AGM-69 70kT',
    'AGM-78A',
    'AGM-78B',
    'AGM-78C',
    'AGM-78D',
    'AGM-84E SLAM',
    'AGM-84H SLAM-ER',
    'AGM-88A',
    'AGM-88B',
    'AGM-88C',
    'ALARM',
    'BGM-71A TOW',
    'BGM-71E TOW 2',
    'Brimstone',
    'Drone',
    'Kh-15',
    'Kh-15A',
    'Kh-15P',
    'Kh-22MP',
    'Kh-22N',
    'Kh-23',
    'Kh-25ML',
    'Kh-25MP',
    'Kh-29L',
    'Kh-29T',
    'Kh-31P',
    'Kh-58',
    'Kh-58U',
    'Kh-59',
    'Kh-59M',
    'Kh-66',
    'SPICE-1000',
    'X-29TE',
    'X-31P',
    'BGM-71A TOW',
    'BGM-71E TOW 2',
    'FL-2',
    'YJ-12',
    'YJ-1',
    'YJ-83',
    'C-803',
    'YJ-83K',
    'C-803K',
    '3M10 Granat',
    '3M10 Granat(n)',
    'AGM-I',
    'BGM-109 TLAM',
    'BGM-109G TLAM-N',
    'KFR-1',
    'Kh-55SE',
    'MIM-14A',
    'MIM-14A(n)',
    'MIM-14B',
    'MIM-14B(n)',
    'S-35',
    'SCALP EG',
    'SCALP Naval',
    'Storm Shadow',
    'UGM-109A',
    'UGM-109C',
    'UGM-133A',
    'P-5 Pyatyorka',
    'P-6'}
    if missile in GrM:
        return 1
    else:
        return 0    

def AntiRadarMissile(UI, missile):
    GrM = {
    'AGM-45A',
    'AGM-45B',
    'AGM-78A',
    'AGM-78B',
    'AGM-78C',
    'AGM-78D',
    'AGM-88A',
    'AGM-88B',
    'AGM-88C',
    'ALARM',
    'Kh-15P',
    'Kh-22MP',
    'Kh-25MP',
    'Kh-31P',
    'X-31P'}
    if missile in GrM:
        return 1
    else:
        return 0
        
def AntiAirMissile(UI, missile):
    AaM = {
    'MIM-14A',
    'MIM-14A(n)',
    'MIM-14B',
    'MIM-14B(n)',
    'RIM-156',
    'RIM-162A',
    'RIM-162B',
    'RIM-162C',
    'RIM-162D',
    'RIM-174A',
    'RIM-66A',
    'RIM-67A',
    '3M9M',
    '3M9M1',
    '3M9M3',
    '3M9M4',
    '40N6',
    '40N6D',
    '48N6',
    '48N6D',
    '48N6DM',
    '48N6E',
    '48N6E2',
    '48N6E3',
    '5V55K',
    '5V55KD',
    '5V55PM',
    '5V55R',
    '5V55RD',
    '5V55RM',
    '5V55RUD',
    '5V55S',
    '5V55U',
    '5V55V',
    '9K32 Strela 2',
    '9M311 Kashtan',
    '9M317',
    '9M32 Strela 2',
    '9M32M Strela 3',
    '9M33',
    '9M330 Kinzhal',
    '9M33M',
    '9M33M2',
    '9M33M3',
    '9M38',
    '9M38M1',
    '9M38M2',
    '9M39M1',
    '9M82',
    '9M82M',
    '9M83',
    '9M83M',
    '9M8M',
    '9M8M1',
    '9M8M2',
    '9M8M3',
    '9M96',
    '9M96D',
    '9M96E',
    '9M96E2',
    'AIM-120A',
    'AIM-120B',
    'AIM-120C',
    'AIM-120C5',
    'AIM-120C7',
    'AIM-120D',
    'AIM-132 ASRAAM',
    'AIM-4',
    'AIM-4A',
    'AIM-4C',
    'AIM-4D',
    'AIM-4E',
    'AIM-4F',
    'AIM-4G',
    'AIM-54A',
    'AIM-54C',
    'AIM-54C ECCM',
    'AIM-7C',
    'AIM-7D',
    'AIM-7E',
    'AIM-7F',
    'AIM-7M',
    'AIM-7P',
    'AIM-9B',
    'AIM-9C',
    'AIM-9D',
    'AIM-9E',
    'AIM-9G',
    'AIM-9H',
    'AIM-9J',
    'AIM-9L',
    'AIM-9M',
    'AIM-9N',
    'AIM-9P',
    'AIM-9P4',
    'AIM-9X',
    'Aspide 2000',
    'ASPIDE-1A',
    'ASRAAM',
    'ASTER 15',
    'ASTER 30',
    'Bloodhound mk1',
    'Bloodhound mk2',
    'Derby',
    'ERINT/PAC-3',
    'FIM-92 Stinger',
    'FireStreak',
    'HHQ-9A',
    'Igla-M SAM',
    'IRIS-T',
    'K-5M',
    'MAA-1A',
    'Magic II',
    'Matra R.440N',
    'MBDA Meteor',
    'MICA IR',
    'MICA RF',
    'MIM-104A',
    'MIM-104B',
    'MIM-104C',
    'MIM-104D',
    'MIM-23A',
    'MIM-23B',
    'MIM-23C',
    'MIM-23E',
    'MIM-23F',
    'MIM-23G',
    'MIM-23H',
    'MIM-23J',
    'MIM-23K',
    'MIM-23L',
    'MIM-23M',
    'Mistral',
    'Mistral 2',
    'Python 3',
    'Python 4',
    'Python 5',
    'R-23R',
    'R-23T',
    'R-24R',
    'R-24T',
    'R-27R',
    'R-27RE',
    'R-27T',
    'R-27TE',
    'R-33',
    'R-3M',
    'R-3R',
    'R-3S',
    'R-40R',
    'R-40T',
    'R-60',
    'R-60M',
    'R-60MK',
    'R-60T',
    'R-73',
    'R-73E',
    'R-73M',
    'R-73M2',
    'R-77',
    'R-77PL',
    'R-77T',
    'R.530',
    'R.550 Magic',
    'R.550 Magic II',
    'Rapier-SAM',
    'Red Top',
    'RIM-116A RAM',
    'RIM-116B RAM',
    'RIM-24A',
    'RIM-24B',
    'RIM-24C',
    'RIM-2B',
    'RIM-2C',
    'RIM-2F',
    'RIM-66B',
    'RIM-66C',
    'RIM-66E',
    'RIM-66G',
    'RIM-66H',
    'RIM-66J',
    'RIM-66K',
    'RIM-66L',
    'RIM-66M',
    'RIM-67B',
    'RIM-67C',
    'RIM-67D',
    'RIM-7E',
    'RIM-7M(v1)',
    'RIM-7M(v2)',
    'RIM-7P(v1)',
    'RIM-7P(v2)',
    'RIM-8A',
    'RIM-8C',
    'RIM-8E',
    'RIM-8F',
    'RIM-8J',
    'SAM-N-7 BT-3A',
    'SAM-N-7 BW-1',
    'Sea Cat',
    'Sea Dart Mod0',
    'Sea Dart Mod2',
    'Sea Wolf',
    'Shafrir 1',
    'Shafrir 2',
    'Skyflash',
    'Super 530D',
    'Super 530F',
    'Tien Kung-II SAM',
    'V-300',
    'V-600',
    'V-601',
    'V-601P',
    'V-601PD',
    'V-611',
    'V-750',
    'V-750V',
    'V-750VN',
    'V-755',
    'V-759',
    'V-760',
    'V-860',
    'V-860P',
    'V-860PV',
    'V-870',
    'V-880',
    'V-880E',
    'V-880M',
    'V-880MN',
    'V-880N',
    'V759',
    'SAM-N-6b',
    'SAM-N-6b1',
    'SAM-N-6c1',
    'SAM-N-6b1(CW)',
    'V-611M',
    'R-4T',
    'R-4TM',
    'R-4RM',
    'R-4R',
    'AAM-1',
    'AAM-3',
    'AAM-5',
    'AAM-4',
    'AAM-4b',
    'RIM-7H',
    'RIM-7F',
    'Sea Cat Mod.2',
    'PL-2A',
    'PL-2B',
    'PL-5B',
    'PL-5C',
    'PL-5E',
    'PL-7',
    'PL-7B',
    'PL-8',
    'PL-8A',
    'PL-8B',
    'PL-11',
    'PL-11A',
    'PL-11 AMR',
    'PL-12',
    'PL-13',
    'LY-60N',
    'HQ-7',
    'HQ-16',
    'HQ-61B',
    'HQ-61C',
    'HQ-9A',
    'MIM-72A',
    }
    if missile in AaM:
        return 1
    else:
        return 0    

def AntiMissileMissile(UI, missile):
    AmM = {
    'MIM-14A',
    'MIM-14A(n)',
    'MIM-14B',
    'MIM-14B(n)',
    'RIM-156',
    'RIM-162A',
    'RIM-162B',
    'RIM-162C',
    'RIM-162D',
    'RIM-174',
    'RIM-174A',
    'RIM-66A',
    'RIM-67A',
    '3M9M',
    '3M9M1',
    '3M9M3',
    '3M9M4',
    '40N6',
    '40N6D',
    '48N6',
    '48N6D',
    '48N6DM',
    '48N6E',
    '48N6E2',
    '48N6E3',
    '5V55K',
    '5V55KD',
    '5V55PM',
    '5V55R',
    '5V55RD',
    '5V55RM',
    '5V55RUD',
    '5V55S',
    '5V55U',
    '5V55V',
    '9K32 Strela 2',
    '9M311 Kashtan',
    '9M317',
    '9M32 Strela 2',
    '9M32M Strela 3',
    '9M33',
    '9M330 Kinzhal',
    '9M33M',
    '9M33M2',
    '9M33M3',
    '9M38',
    '9M38M1',
    '9M38M2',
    '9M39M1',
    '9M82',
    '9M82M',
    '9M83',
    '9M83M',
    '9M8M',
    '9M8M1',
    '9M8M2',
    '9M8M3',
    '9M96',
    '9M96D',
    '9M96E',
    '9M96E2',
    'AIM-54A',
    'AIM-54C',
    'AIM-54C ECCM',
    'ASPIDE-1A',
    'ASTER 15',
    'ASTER 30',
    'Bloodhound mk1',
    'Bloodhound mk2',
    'DART',
    'ERINT/PAC-3',
    'FIM-92 Stinger',
    'HHQ-9A',
    'Igla-M SAM',
    'Matra R.440N',
    'MIM-104A',
    'MIM-104B',
    'MIM-104C',
    'MIM-104D',
    'MIM-23A',
    'MIM-23B',
    'MIM-23C',
    'MIM-23E',
    'MIM-23F',
    'MIM-23G',
    'MIM-23H',
    'MIM-23J',
    'MIM-23K',
    'MIM-23L',
    'MIM-23M',
    'Mistral',
    'Mistral 2',
    'Rapier-SAM',
    'RIM-116A RAM',
    'RIM-116B RAM',
    'RIM-24A',
    'RIM-24B',
    'RIM-24C',
    'RIM-2B',
    'RIM-2C',
    'RIM-2F',
    'RIM-66B',
    'RIM-66C',
    'RIM-66E',
    'RIM-66G',
    'RIM-66H',
    'RIM-66J',
    'RIM-66K',
    'RIM-66L',
    'RIM-66M',
    'RIM-67B',
    'RIM-67C',
    'RIM-67D',
    'RIM-7E',
    'RIM-7M(v1)',
    'RIM-7M(v2)',
    'RIM-7P(v1)',
    'RIM-7P(v2)',
    'RIM-8A',
    'RIM-8C',
    'RIM-8E',
    'RIM-8F',
    'RIM-8J',
    'SA-SAM',
    'SAM-I',
    'SAM-N-7 BT-3A',
    'SAM-N-7 BW-1',
    'Sea Cat',
    'Sea Dart Mod0',
    'Sea Dart Mod2',
    'Sea Wolf',
    'Skyflash',
    'Tien Kung-II SAM',
    'V-300',
    'V-600',
    'V-601',
    'V-601P',
    'V-601PD',
    'V-611',
    'V-750',
    'V-750V',
    'V-750VN',
    'V-755',
    'V-759',
    'V-760',
    'V-860',
    'V-860P',
    'V-860PV',
    'V-870',
    'V-880',
    'V-880E',
    'V-880M',
    'V-880MN',
    'V759',
    'SAM-N-6b',
    'SAM-N-6b1',
    'SAM-N-6c1',
    'SAM-N-6b1(CW)',
    'V-611M',
    'RIM-7H',
    'RIM-7F',
    'Sea Cat Mod.2',
    'LY-60N',
    'HQ-7',
    'HQ-16',
    'HQ-61B',
    'HQ-61C',
    'HQ-9A',
    'AGM-119A',
    'AGM-119B',
    'AGM-119C'}
    if missile in AmM:
        return 1
    else:
        return 0    

def AntiSubMissile(UI, missile):
    AsuM = {
    'Penguin Mk2',
    'RPK-3 Metel',
    'RPK-6 Vodopod',
    'RPK-7 Veter',
    'RUM-139 Mod4 ASROC',
    'RUR-5 ASROC',
    'RUR-5 Mod4 ASROC',
    'ASROC-TEST',
    'RBU test',
    'RUR-4',
    'UUM-44A',
    'Malafon'}    
    if missile in AsuM:
        return 1
    else:
        return 0    

def StratNuke(UI, ballistic):
    ballistic_NUKE = {
        'B-28 Mod1 1.1MT',
        'B-28 Mod2 350kT',
        'B-28 Mod3 70kT',
        'B-28 Mod5 1.45MT',
        'B-39 3.5MT',
        'B-41 25MT',
        'B-43 1MT',
        'B-43 300kT',
        'B-43 700kT',
        'B-43 70kT',
        'B-53 1MT',
        'B-53 2.5MT',
        'B-53 5MT',
        'B-53 9MT',
        'B-57 Mod0 5kT',
        'B-57 Mod1 10kT',
        'B-57 Mod3 15kT',
        'B-57 Mod5 20kT',
        'B-61 10kT',
        'B-61 170kT',
        'B-61 1kT',
        'B-61 340kT',
        'B-61 5kT',
        'B-61 60kT',
        'B-61 80kT',
        'B-83',
        'B-83 100kT',
        'B-83 1200kT',
        'B-83 200kT',
        'B-83 25kT"',
        'B-83 400kT',
        'B-83 50kT"',
        'B-83 800kT',
        'Mark 1 15kT',
        'Mark 11 30kT',
        'Mark 12 14kT',
        'Mark 14 6.9MT',
        'Mark 15 Mod1 1.69MT',
        'Mark 15 Mod3 3.8MT',
        'Mark 17 13.5MT',
        'Mark 18 500kT',
        'Mark 21 4.5MT',
        'Mark 24 13.5MT',
        'Mark 27 1MT',
        'Mark 27 200kT',
        'Mark 27 2MT',
        'Mark 27 500kT',
        'Mark 27 60kT',
        'Mark 3 20kT',
        'Mark 36 9.6MT',
        'Mark 4 14kT',
        'Mark 4 1kT',
        'Mark 4 22kT',
        'Mark 4 30kT',
        'Mark 4 4kT',
        'Mark 4 8kT',
        'Mark 5 100kT',
        'Mark 5 120kT',
        'Mark 5 16kT',
        'Mark 5 55kT',
        'Mark 5 60kT',
        'Mark 5 6kT',
        'Mark 6 154kT',
        'Mark 6 160kT',
        'Mark 6 26kT',
        'Mark 6 80kT',
        'Mark 6 8kT',
        'Mark 7 16kT',
        'Mark 7 24kT',
        'Mark 7 48kT',
        'Mark 7 61kT',
        'Mark 7 8kT',
        'Mark 8 30kT',
        'RDS 220 Tsar Bomba 50MT',
        'RN-28',
        'TN-1000',
        'Red Beard 20kT'}
    if ballistic in ballistic_NUKE:
        return 1
    else:
        return 0 
        
def IronBomb(UI, ballistic):
    ballistic_IB = {
        'FAB-100',
        'FAB-250',
        'FAB-500',
        'GB-200',
        'GB-500',
        'BLU-1/B',
        'M117',
        'M118',
        'Mk-81',
        'Mk-82',
        'Mk-83',
        'Mk-84',
        'FAB-1500',
        'FAB-3000',
        'GP MC 250',
        'GP MC 500',
        'GP MC 1000',
        'AP 1500',
        'GP MC 1900',
        'GP MC 4000',
        'GP HC 8000'}
    if ballistic in ballistic_IB:
        return 1
    else:
        return 0 

def GuidedBomb(UI, ballistic):
    ballistic_GBU = {
        'AGM-130',
        'GBU-1/B',
        'GBU-10/B',
        'GBU-11/B',
        'GBU-12/B',
        'GBU-15/B',
        'GBU-16/B',
        'GBU-24B/B',
        'GBU-24/B',
        'GBU-27/B',
        'GBU-28B/B',
        'GBU-31(V)1/B',
        'GBU-31A(v)2',
        'GBU-31B(v)2',
        'GBU-31C(v)4',
        'GBU-32',
        'GBU-32A(v)2',
        'GBU-32B(v)2',
        'GBU-32C(v)4',
        'GBU-39 SDB',
        'KAB-1500Kr',
        'KAB-1500L',
        'KAB-500Kr',
        'KAB-500KRU',
        'KAB-500L',
        'KAB-500R',
        'GBU-30',
        'Durandal'}
    if ballistic in ballistic_GBU:
        return 1
    else:
        return 0 

def StrafeGuns(UI, ballistic):
    ballistic_Strafe = {
        '20x110 mm',
        "20x110 mm x2"
        '27mm DM10 FAPDS',
        '30mm PGU-14/B API',
        '30mm M230 Chaingun Ammo',
        '30mm NR-30 HEI x2',
        '30mm NR-30 HEI',
        '30mm Su-25',
        '27mm HE',
        '30mm DEFA',
        '20mm PGU',
        '25mm HEI-T',
        '30x150mm GIAT',
        '30mm OP-84 FRAG Tracer AK-306',
        '23mm AM-23',
        '12.7mm YaKB Burst',
        '20mm PGU',
        '23mm AM/NR-23 HEI',
        '20mm HS.404',
        '30mm ADEN API',
        '20mm M53 API',
        '.50 cal bullet air',
        '.50 cal bullet air(x2)',
        '.30 cal bullet Air(x2)',
        '.30 cal bullet Air',
        '23mm GSh-23 HEI'
        "20mm HS.404 x2"
        "20mm PGU-28/B"
        "20x102 mm burst"
        "23mm AM/NR-23 HEI"
        "30x150mm GIAT"
        
        
        
        }      
    if ballistic in ballistic_Strafe:
        return 1
    else:
        return 0        
        
def Rockets(UI, ballistic):
    ballistic_Rockets = {
        'Hydra-70 rocket',
        'S-5M Rocket',
        'S-5K Rocket',
        'Zuni 127 mm',
        'Mk-40 FFAR',
        'Mk 16 Zuni FFAR',
        'Mk 71 Zuni WAFAR',
        '5in HVAR',
        '5in FFAR',
        'S-3K 160mm',
        'S-5K 57mm',
        'S-8B 80mm',
        'S-8K 80mm',
        'S-25C 266mm',
        'S-25OF 266mm',
        'S-24B 240mm',
        '68mm SNEB Rockets',
        'RP-3 HE',
        'RP-3 AP',
        '50mm (2in) FFAR Rockets'}      
    if ballistic in ballistic_Rockets:
        return 1
    else:
        return 0

def HasIronBombs(interface):
    #simple check to see if we have bombs, capable of functioning for both group and individual units.
    try:
        #GetPlatformId ONLY works on UnitInfo, so if we throw an error, we got called by GroupInfo instead
        test = interface.GetPlatformId()
        group = False
    except:
        group = True
            
    if group:
        for unit in xrange(interface.GetUnitCount()):
            UI = interface.GetPlatformInterface(unit)
            nLaunchers = UI.GetLauncherCount()
            for n in range(0, nLaunchers):
                info = UI.GetLauncherInfo(n)
                # LaunchMode == 3 is gravity bomb
                if (info.LaunchMode == 3) and (info.Quantity > 0): 
                    return 1
        return 0
    else:
        UI = interface
        nLaunchers = UI.GetLauncherCount()
        for n in range(0, nLaunchers):
            info = UI.GetLauncherInfo(n)
            # LaunchMode == 3 is gravity bomb
            if (info.LaunchMode == 3) and (info.Quantity > 0): 
                return 1
        return 0
        
def HasRockets(interface):
    #simple check to see if we have bombs, capable of functioning for both group and individual units.
    try:
        #GetPlatformId ONLY works on UnitInfo, so if we throw an error, we got called by GroupInfo instead
        test = interface.GetPlatformId()
        group = False
    except:
        group = True
            
    if group:
        for unit in xrange(interface.GetUnitCount()):
            UI = interface.GetPlatformInterface(unit)
            nLaunchers = UI.GetLauncherCount()
            for n in range(0, nLaunchers):
                weapon_name = UI.GetLauncherWeaponName(n)
                if Rockets(UI, weapon_name): 
                    return 1
        return 0
    else:
        UI = interface
        nLaunchers = UI.GetLauncherCount()
        for n in range(0, nLaunchers):
            weapon_name = UI.GetLauncherWeaponName(n)
            if Rockets(UI, weapon_name): 
                return 1
        return 0

def HasGBU(interface):
    #simple check to see if we have bombs, capable of functioning for both group and individual units.
    try:
        #GetPlatformId ONLY works on UnitInfo, so if we throw an error, we got called by GroupInfo instead
        test = interface.GetPlatformId()
        group = False
    except:
        group = True
            
    if group:
        for unit in xrange(interface.GetUnitCount()):
            UI = interface.GetPlatformInterface(unit)
            nLaunchers = UI.GetLauncherCount()
            for n in range(0, nLaunchers):
                weapon_name = UI.GetLauncherWeaponName(n)
                if GuidedBomb(UI, weapon_name): 
                    return 1
        return 0
    else:
        UI = interface
        nLaunchers = UI.GetLauncherCount()
        for n in range(0, nLaunchers):
            weapon_name = UI.GetLauncherWeaponName(n)
            if GuidedBomb(UI, weapon_name): 
                return 1
        return 0        
        
def HasStrafeGuns(interface):
    try:
        #GetPlatformId ONLY works on UnitInfo, so if we throw an error, we got called by GroupInfo instead
        test = interface.GetPlatformId()
        group = False
    except:
        group = True
            
    if group:
        for unit in xrange(interface.GetUnitCount()):
            UI = interface.GetPlatformInterface(unit)
            nLaunchers = UI.GetLauncherCount()
            for n in range(0, nLaunchers):
                weapon_name = UI.GetLauncherWeaponName(n)
                if StrafeGuns(UI, weapon_name): 
                    return 1
        return 0
    else:
        UI = interface
        nLaunchers = UI.GetLauncherCount()
        for n in range(0, nLaunchers):
            weapon_name = UI.GetLauncherWeaponName(n)
            if StrafeGuns(UI, weapon_name): 
                return 1
        return 0

def HasAAW(interface):
    try:
        #GetPlatformId ONLY works on UnitInfo, so if we throw an error, we got called by GroupInfo instead
        test = interface.GetPlatformId()
        group = False
    except:
        group = True
            
    if group:
        for unit in xrange(interface.GetUnitCount()):
            weapon_name = UI.GetLauncherWeaponName(n)
            if AntiAirMissile(UI, weapon_name): 
                return 1
        return 0
    else:
        UI = interface
        nLaunchers = UI.GetLauncherCount()
        for n in range(0, nLaunchers):
            weapon_name = UI.GetLauncherWeaponName(n)
            if AntiAirMissile(UI, weapon_name): 
                return 1
        return 0

def strafe_capable(UI):
    capable = False
    for n in range(0, UI.GetLauncherCount()):
        weaponName = UI.GetLauncherWeaponName(n)
        if StrafeGuns(UI, weaponName) or Rockets(UI, weaponName):
            capable = True
    return capable        

def GunRound(UI, weapon):
    ballistic = {
            ".30 cal bullet Air(x2)",
            ".30 cal bullet",
            ".50 cal bullet air",
            ".50 cal bullet air(x2)",
            ".50 cal bullet",
            "100mm 3BM6 HVAPDS",
            "100mm AA",
            "100mm F-55 HE",
            "100mm FRAG",
            "100mm OEA F1 HE",
            "100mm OEA Mle 1928",
            "100mm OF-55 FRAG",
            "100mm OF-58 FRAG",
            "100mm OPF F4 PFHE",
            "100mm ZS-55P AA",
            "100mm ZS-58 AA",
            "100mm ZS-58P AA",
            "105mm APFSDS",
            "114mm N4A1 HE",
            "114mm N4A1 HE(AA fuse)",
            "114mm N4A1 HE-ER",
            "114mm N4A1 HE-ER(AA fuse)",
            "114mm/53 mk6 AA",
            "114mm/53 mk6 HE",
            "114mm/53 mk6 SAP",
            "115mm 3VBM-1 APFSDS",
            "12.7mm B-30 AP",
            "12.7mm B-32 APi",
            "12.7mm YaKB Burst",
            "12.7x108mm",
            "120mm M829A2 APFSDS",
            "125mm 3VBM19 APFSDS",
            "127/54 Compact",
            "127mm ERGM",
            "127mm mk 127 HE-CVT EX-175",
            "127mm mk 127 HE-CVT mk 67",
            "127mm mk 32",
            "127mm mk 34 AAC",
            "127mm mk 41 AAC",
            "127mm mk 41 HC",
            "127mm mk 80 HE-PD EX-175",
            "127mm mk 80 HE-PD mk 67",
            "12cm/50 Mdl50 HE",
            "130mm AK-130",
            "130mm F-44 HE",
            "130mm OF-42 HE-FRAG",
            "130mm PB-42 SAP",
            "130mm ZS-42P AA",
            "130mm ZS-44 AA",
            "130mm ZS-44P AA",
            "152mm AP B-35",
            "152mm HE OF-35",
            "152mm SAP PB-35",
            "20mm AP-T MK9",
            "20mm AP-T",
            "20mm APDS-T",
            "20mm APT percussion",
            "20mm F2",
            "20mm HE MK3",
            "20mm HE(b)",
            "20mm HE-I MK3",
            "20mm HE-I",
            "20mm HE-I(b)",
            "20mm HE-T MK4",
            "20mm HE-T MK7",
            "20mm HE-T x10",
            "20mm HE-T x2",
            "20mm HE-T",
            "20mm HEI Electric",
            "20mm HEI Percussion",
            "20mm HS.404 x2",
            "20mm HS.404",
            "20mm M53 API",
            "20mm Mark 149-4",
            "20mm Meroka APDS-T",
            "20mm Mk-15",
            "20mm PGU",
            "20mm PGU-28/B",
            "20mm Rh202 HE-T",
            "20mm SAP(b)",
            "20mm mark 244-0 ELC",
            "20mm/85  GAM-B01 HE-I",
            "20x102 mm burst",
            "20x110 mm x2",
            "20x110 mm",
            "23mm AM-23",
            "23mm AM/NR-23 HEI x2",
            "23mm AM/NR-23 HEI",
            "23mm GSh-23 HEI",
            "23mm OFZ",
            "25mm APDS",
            "25mm APDS-T",
            "25mm FAPDS-T",
            "25mm HE-I-T",
            "25mm HEI",
            "25mm HEI-T",
            "25mm M791 APDS-T",
            "25mm SAPHEI",
            "25mm SAPHEI-T",
            "27mm DM10 FAPDS",
            "27mm FAPDS",
            "27mm HE",
            "30mm 3UBR8 APDS",
            "30mm ADEN API",
            "30mm AK-630",
            "30mm AP-I",
            "30mm APDS",
            "30mm APDS-T",
            "30mm APFSDS-T",
            "30mm API",
            "30mm Br-83 AP",
            "30mm DEFA",
            "30mm F-33 HE",
            "30mm FMPDS",
            "30mm HE",
            "30mm HEI",
            "30mm HEI-T",
            "30mm M230 Chaingun Ammo",
            "30mm NR-30 HEI x2",
            "30mm NR-30 HEI",
            "30mm OF-83 HE-FRAG",
            "30mm OF-84 HE-FRAG AK-306",
            "30mm OF-84 HE-FRAG AK-630M",
            "30mm OF-84 HE-FRAG Kashtan-M",
            "30mm OP-84 FRAG Tracer AK-306",
            "30mm OP-84 FRAG Tracer AK-630M",
            "30mm OP-84 FRAG Tracer Kashtan-M",
            "30mm PGU-13/B HE-I",
            "30mm PGU-14/B API",
            "30mm SAPHEI-T",
            "30mm Su-25",
            "30mm Type 730",
            "30mm/75 GCM-AO3-2 APDS",
            "30mm/75 GCM-AO3-2 HE",
            "30x150mm GIAT",
            "35mm AHEAD",
            "375 Bofors ASRL x4",
            "37mm HE-FRAG Tracer x2",
            "37mm HE-FRAG Tracer",
            "37mm HE-FRAG",
            "37mm Type 676 HE-FRAG",
            "40 mm L70 HE x5",
            "406mm Mk13 HC",
            "406mm Mk8 AP",
            "40mm HE Mk1 Md1 x2",
            "40mm HE Mk1 Md1 x4",
            "40mm HE Mk1 Md1 x8",
            "40mm HE Mk1 Md1",
            "40mm HE-T x2",
            "40mm HE-T",
            "40mm PFHE x2",
            "40mm PFHE",
            "45mm F-75 HE",
            "45mm OR-75 FRAG",
            "57mm HCER",
            "57mm HE",
            "57mm PFHE",
            "57mm Tracer-FRAG",
            "57mm Type 59 HE-T",
            "73mm PG-15V HEAT",
            "75mm AA",
            "76.2mm OS-62 FRAG",
            "76.2mm ZS-63 AA",
            "76mm AA Mk27",
            "76mm HC",
            "76mm HE Mk27",
            "76mm HE-MOM",
            "76mm HE-SAPOM",
            "76mm HE-SAPOMER",
            "76mm Mk 27 Md1 HC",
            "76mm Mk 31 Md1 AA VT",
            "76x900mm HE",
            "AB 40mm L/60 HE-T",
            "Gen100AA",
            "Gen105AA",
            "Gen105ART",
            "Gen105AT",
            "Gen10AA",
            "Gen115AA",
            "Gen120AA",
            "Gen125AA",
            "Gen127AA",
            "Gen128AA",
            "Gen150AA",
            "Gen155ART",
            "Gen20AA",
            "Gen23AA",
            "Gen25AA",
            "Gen28AA",
            "Gen30AA",
            "Gen35AA",
            "Gen37AA",
            "Gen40AA",
            "Gen50AA",
            "Gen55AA",
            "Gen57AA",
            "Gen75AA",
            "Gen80AA",
            "Gen88AA",
            "Gen90AA",
            "Gen90AT",
            "Mk75 76/62",
            "Otobreda Compact 30/40L",
            "Phalanx Block 1B",
            "SGE-30 Goalkeeper",
            }
    if weapon in ballistic:
        return 1
    else:
        return 0 
    
def CMs(UI, cm):
    cms = {
            'ALE-45 Chaff',
            'ALE-45 Flare',
            'ALEX Chaff',
            'AN/AQQ-24 Nemesis Laser Beam',
            'AN/ALE-40 bengala',
            'AN/ALE-40 chaff',
            'AN/ALE-55 FOTD',
            'ASO-2V bengala',
            'Chaff-1',
            'Chaff-2',
            'DM/A-202 bengala',
            'DM/A-202 chaff',
            'Dagaie',
            'Decoy-1',
            'Flare-1',
            'Flare-2',
            'MG-104 Decoy',
            'MG-114 Decoy',
            'MG-74 Decoy',
            'Mk-186 TORCH Flare',
            'Mk-53 Nulka Hovering Decoy',
            'Noisemaker-1',
            'PPI-50',
            'PRP-50',
            'SCLAR',
            'SKWS-12T',
            'Sagaie Flare',
            'Ship Flare-1',
            'Ship Flare-2',
            'Ship Flare-3'}
    if cm in cms:
        return 1
    else:
        return 0
            
def NukeMis(UI, weapon):
    nukes = {
            'AGM-69 140kT',
            'AGM-69 15kT',
            'Kh-58U',
            'V-760',
            '3M10 Granat(n)',
            'BGM-109G TLAM-N',
            'UGM-109A',
            'MIM-14B(n)',
            'AGM-69 210kT',
            'V-880MN',
            'V-880N',
            'MIM-14A(n)',
            'UGM-133A',
            '5V55S',
            '5V55V',
            'Kh-15',
            'Kh-22N',
            'AGM-69 70kT'}
    if weapon in nukes:
        return 1
    else:
        return 0

def Mines(UI, weapon):
    mines = {
            'Mk-36 DST',
            'Mk-40 DST',
            'Mk-41 DST',
            'Mk-59 DST',
            'Mk-56 Mine',
            'Mk-57 Mine',
            'Mk-60 CAPTOR',
            'Mk-10 Mod5 Mine',
            'Mk-10 Mod6 Mine',
            'Mk-25 Mine',
            'Mk-36 Mod1 Mine',
            'Mk-36 Mod2 Mine',
            'Mk-39 Mine',

    }
    if weapon in mines:
        return 1
    else:
        return 0

def FuelTank(UI, tank):
    tanks = {
    "310 liter tank",
    "100 gallon wing tank",
    "400 liter tank",
    "PTB-400",
    "120 gallon tank",
    "150 gallon tank",
    "300 gallon tank",
    "450 liter tank",
    "PTB-490",
    "500 liter tank",
    "PTB-600",
    "600 liter tank",
    "Tanque de 600 litros",
    "625 liter tank",
    "700 liter tank",
    "190 gallon wing tank",
    "750 litre tank",
    "750 liter tank",
    "782 liter tank",
    "800 liter tank",
    "PTB-800",
    "900 liter tank",
    "1000 liter tank",
    "FPU-1",
    "285 Gallon Internal Tank FB-111",
    "1100 Liter Tank",
    "300 Gallon Internal Tank FB-111",
    "300 gallon wing tank",
    "Tanque de 300 galones",
    "1150 Liter Tank",
    "PTB 1150",
    "FPU-6",
    "1200 liter tank",
    "330 gallon wing tank",
    "Tanque de 330 galones",
    "1250 liter tank",
    "FPU-8",
    "370 gallon wing tank",
    "Tanque de 370 galones",
    "1400 liter tank",
    "1520 Liter Tank",
    "1700 liter tank",
    "2000 liter tank",
    "Lightning Ventral Tank",
    "594 gallon wing tank",
    "600 gallon centerline tank",
    "Tanque de 600 galones",
    "600 gallon tank",
    "FPU-7",
    "3000 liter tank",
    "AJ500 Fuel",
    "AJ840 Fuel",
    "AJ1340 Fuel",
    }
    if tank in tanks:
        return 1
    else:
        return 0

#

